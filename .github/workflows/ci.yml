name: Orion Backend CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: pytest (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements*.txt') }}

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          if exist requirements.txt ( python -m pip install -r requirements.txt )
          if exist requirements-dev.txt ( python -m pip install -r requirements-dev.txt )

      - name: Run pytest
        working-directory: ./backend
        env:
          APP_NAME: orion-backend
          LOG_DIR: ./logs
          CONFIG_DIR: ./config
          AUDIT_LOG_PATH: ./logs/orders_audit.jsonl
          BACKEND_API_KEY: ""
        run: |
          python -m pytest -q --maxfail=1 --disable-warnings --junitxml=pytest.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            backend/pytest.xml
            backend/logs/**
